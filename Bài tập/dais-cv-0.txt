Task 2.1, create.sql:

CREATE TABLE Student (
  login    CHAR(6) PRIMARY KEY,
  fname    VARCHAR(30) NOT NULL,
  lname    VARCHAR(50) NOT NULL);
  
CREATE TABLE StudyPlan (
  studentLogin CHAR(6) NOT NULL REFERENCES Student,
  courseCode CHAR(11) NOT NULL REFERENCES Course,
  year NUMBER(4) NOT NULL,
  PRIMARY KEY(studentLogin, courseCode, year));
  
CREATE TABLE Course (
  code    CHAR(11) PRIMARY KEY,
  name    VARCHAR(50) NOT NULL); 
  
CREATE TABLE Guarantee (
  teacherLogin CHAR(5) NOT NULL REFERENCES Teacher,
  courseCode CHAR(11) NOT NULL REFERENCES Course,
  year NUMBER(4) NOT NULL,
  PRIMARY KEY(teacherLogin, courseCode, year));  

CREATE TABLE Teacher (
  login    char(5) PRIMARY KEY,
  lname    VARCHAR(30) NOT NULL,
  fname VARCHAR(50) NOT NULL);
  
----------------------------------------------------  
  
Task 2.3, init.sql:  

  INSERT INTO Student VALUES('(�pla457�, �John�, �Mnemonik�);
  INSERT INTO Student VALUES((�sob458�, �Jake�, �Casper�);
  INSERT INTO Student VALUES(...);
  
  INSERT INTO Course VALUES((�456-dais-01�, �Database and information systems�);
  INSERT INTO Course VALUES((�456-tzd-01�, �Theory of data�);
  
  INSERT INTO Teacher VALUES('bay01', 'Josef', 'Bayer');
  INSERT INTO Teacher VALUES('cod02', 'Stanislav', 'Codd');
  
  INSERT INTO StudyPlan VALUES('pla457', '456-dais-01', 2009);
  INSERT INTO StudyPlan VALUES('pla457', '456-tis-01', 2009);
  INSERT INTO StudyPlan VALUES('pla457', '456-sd-01', 2009);
  INSERT INTO StudyPlan VALUES('sob458', '456-tzd-01', 2009);
  INSERT INTO StudyPlan VALUES('sob458', '456-sd-01', 2009);
  INSERT INTO StudyPlan VALUES('sob458', '456-sd2-01', 2009);
  INSERT INTO StudyPlan VALUES('sob451', '456-dais-01', 2009);
  INSERT INTO StudyPlan VALUES('sob451', '456-tis-01', 2009);
  INSERT INTO StudyPlan VALUES('sob451', '456-sd2-01', 2009);
  
  INSERT INTO Guarantee VALUES('bay01', '456-sd-01', 2009);
  INSERT INTO Guarantee VALUES('bay01', '456-sd2-01', 2009);
  INSERT INTO Guarantee VALUES('cod02', '456-dais-01', 2009);
  INSERT INTO Guarantee VALUES('cod02', '456-tzd-01', 2009);

----------------------------------------------------  

Task 2.4:

SELECT * FROM Student s, Teacher u, Guarantee g, StudyPlan p
  WHERE u.prijmeni='Codd' AND g.Teacherlogin= u.login AND 
        p.rok=2009 AND p.Coursecode=g.Coursecode AND s.login= p.studentlogin;

SELECT k.* FROM Course k, Student s, StudyPlan p
  WHERE s.prijmeni='Mnemonik' AND s.login=p.studentlogin AND p.rok=2009 AND k.code= p.Coursecode;

SELECT k.* FROM Course k, Student s, StudyPlan p
  WHERE s.prijmeni='Mnemonik' AND s.login=p.studentlogin AND k.code= p.Coursecode;
  
SELECT DISTINCT(k.code),k.nazev FROM Course k, StudyPlan p
  WHERE p.rok=2009 AND k.code=p.Coursecode;
  
SELECT DISTINCT(u.login), u.jmeno, u.prijmeni FROM Teacher u, Guarantee g, StudyPlan p
  WHERE p.rok=2009 AND g.rok=2009 AND g.Coursecode=p.Coursecode AND g.Teacherlogin=u.login;
  
----------------------------------------------------  

Task 2.5:

1. ALTER TABLE ... ADD 
2. for example.: TO_DATE('15.08.2009', 'DD.MM.YYYY')
3. Use for example.: SYSDATE - (3*365), it is not exact!!!

----------------------------------------------------  

Task 4.2: 

SELECT * FROM USER_TABLES;
5.1.2: SELECT TABLE_NAME, OWNER FROM ALL_TABLES;
5.1.3: SELECT COLUMN_NAME, DATA_TYPE FROM USER_TAB_COLUMNS WHERE TABLE_NAME='STUDENT';

----------------------------------------------------  

Task 4.3: 

COMMENT ON TABLE student IS 'Table contains records about students';
COMMENT ON COLUMN student.lname IS 'Name of student';

SELECT * FROM USER_TAB_COMMENTS;
SELECT * FROM USER_COL_COMMENTS;

SELECT * FROM USER_TAB_PRIVS;

SELECT * FROM ALL_TAB_PRIVS;

----------------------------------------------------  

Task 5:

SELECT COLUMN_NAME, DATA_TYPE FROM USER_TAB_COLUMNS WHERE TABLE_NAME=UPPER('student');

----------------------------------------------------------------------

Task 6:
6.1:
Alter table Teacher Add department int check (value in (100, 200, 300))

---------------------------------------------------------------------

Task 7:

1) SELECT * FROM Student WHERE lname like 'Nov%';

2) SELECT * FROM Student WHERE lname like '%y';

3) SELECT * FROM Student WHERE lname like '%a%';

4) SELECT * FROM Student WHERE lname not like '%n%';

5) SELECT * FROM Student WHERE lname like '_o%';

6) SELECT * FROM Student WHERE lname like '%\_%' ESCAPE '\';

----------------------------------------------------------------------

Task 8:

1) SELECT login, fname, lname, NVL(department,'not defined') FROM Teacher;

2) SELECT login, fname, lname,
NVL2(department,'Unknown','Specified') FROM Teacher;

3) if fname=lname then returns NULL

4) returns first not null value in the order of input arguments